{"remainingRequest":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\mdbvue\\src\\components\\Advanced\\Popover.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\mdbvue\\src\\components\\Advanced\\Popover.vue","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Popper from 'popper.js';\n\nconst on = function (element, event, handler) {\n  if (element && event && handler) {\n    document.addEventListener ? element.addEventListener(event, handler, false) : element.attachEvent('on' + event, handler);\n  }\n};\n\nconst off = function (element, event, handler) {\n  if (element && event) {\n    document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\n  }\n};\n\nconst Popover = {\n  props: {\n    trigger: {\n      type: String,\n      default: 'click',\n      validator: value => ['click', 'hover'].indexOf(value) > -1\n    },\n    delayOnMouseOut: {\n      type: Number,\n      default: 10\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    enterActiveClass: String,\n    leaveActiveClass: String,\n    boundariesSelector: String,\n    reference: {},\n    forceShow: {\n      type: Boolean,\n      default: false\n    },\n    close: Boolean,\n    appendToBody: {\n      type: Boolean,\n      default: false\n    },\n    visibleArrow: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n\n      default() {\n        return {};\n      }\n\n    }\n  },\n\n  data() {\n    return {\n      referenceElm: null,\n      popperJS: null,\n      showPopper: false,\n      currentPlacement: '',\n      popperOptions: {\n        placement: 'bottom',\n        gpuAcceleration: false\n      }\n    };\n  },\n\n  watch: {\n    showPopper(value) {\n      if (value) {\n        this.$emit('show');\n        this.updatePopper();\n      } else {\n        this.$emit('hide');\n      }\n    },\n\n    close(value) {\n      if (value) this.doClose();\n    },\n\n    forceShow: {\n      handler(value) {\n        this[value ? 'doShow' : 'doClose']();\n      },\n\n      immediate: true\n    }\n  },\n\n  created() {\n    this.appendedArrow = false;\n    this.appendedToBody = false;\n    this.popperOptions = Object.assign(this.popperOptions, this.options);\n  },\n\n  mounted() {\n    this.referenceElm = this.reference || this.$slots.reference[0].elm;\n    this.popover = this.$refs.popover || this.$slots.default[0].elm;\n\n    switch (this.trigger) {\n      case 'click':\n        on(this.referenceElm, 'click', this.doToggle);\n        on(document, 'click', this.handleDocumentClick);\n        break;\n\n      case 'hover':\n        on(this.referenceElm, 'mouseover', this.onMouseOver);\n        on(this.popover, 'mouseover', this.onMouseOver);\n        on(this.referenceElm, 'mouseout', this.onMouseOut);\n        on(this.popover, 'mouseout', this.onMouseOut);\n        break;\n    }\n  },\n\n  methods: {\n    doToggle() {\n      if (!this.forceShow) {\n        this.showPopper = !this.showPopper;\n      }\n    },\n\n    doShow() {\n      this.showPopper = true;\n    },\n\n    doClose() {\n      this.showPopper = false;\n    },\n\n    doDestroy() {\n      if (this.showPopper) {\n        return;\n      }\n\n      if (this.popperJS) {\n        this.popperJS.destroy();\n        this.popperJS = null;\n      }\n\n      if (this.appendedToBody) {\n        this.appendedToBody = false;\n        document.body.removeChild(this.popover.parentElement);\n      }\n    },\n\n    createPopper() {\n      this.$nextTick(() => {\n        if (this.visibleArrow) {\n          this.appendArrow(this.popover);\n        }\n\n        if (this.appendToBody && !this.appendedToBody) {\n          this.appendedToBody = true;\n          document.body.appendChild(this.popover.parentElement);\n        }\n\n        if (this.popperJS && this.popperJS.destroy) {\n          this.popperJS.destroy();\n        }\n\n        if (this.boundariesSelector) {\n          const boundariesElement = document.querySelector(this.boundariesSelector);\n\n          if (boundariesElement) {\n            this.popperOptions.modifiers = Object.assign({}, this.popperOptions.modifiers);\n            this.popperOptions.modifiers.preventOverflow = Object.assign({}, this.popperOptions.modifiers.preventOverflow);\n            this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\n          }\n        }\n\n        this.popperOptions.onCreate = () => {\n          this.$emit('created', this);\n          this.$nextTick(this.updatePopper);\n        };\n\n        this.popperJS = new Popper(this.referenceElm, this.popover, this.popperOptions);\n      });\n    },\n\n    destroyPopper() {\n      off(this.referenceElm, 'click', this.doToggle);\n      off(this.referenceElm, 'mouseup', this.doClose);\n      off(this.referenceElm, 'mousedown', this.doShow);\n      off(this.referenceElm, 'focus', this.doShow);\n      off(this.referenceElm, 'blur', this.doClose);\n      off(this.referenceElm, 'mouseout', this.onMouseOut);\n      off(this.referenceElm, 'mouseover', this.onMouseOver);\n      off(document, 'click', this.handleDocumentClick);\n      this.showPopper = false;\n      this.doDestroy();\n    },\n\n    appendArrow(element) {\n      if (this.appendedArrow) {\n        return;\n      }\n\n      this.appendedArrow = true;\n      const arrow = document.createElement('div');\n      arrow.setAttribute('x-arrow', '');\n      arrow.className = 'popover_arrow';\n      element.appendChild(arrow);\n    },\n\n    updatePopper() {\n      this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\n    },\n\n    onMouseOver() {\n      this.showPopper = true;\n      clearTimeout(this._timer);\n    },\n\n    onMouseOut() {\n      this._timer = setTimeout(() => {\n        this.showPopper = false;\n      }, this.delayOnMouseOut);\n    },\n\n    handleDocumentClick(e) {\n      if (!this.$el || !this.referenceElm || this.$el.contains(e.target) || this.referenceElm.contains(e.target) || !this.popover || this.popover.contains(e.target)) {\n        return;\n      }\n\n      this.$emit('documentClick');\n\n      if (this.forceShow) {\n        return;\n      }\n\n      this.showPopper = false;\n    }\n\n  },\n\n  destroyed() {\n    this.destroyPopper();\n  }\n\n};\nexport default Popover;\nexport { Popover as mdbPopover };",{"version":3,"sources":["Popover.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <span>\n    <transition @after-leave=\"doDestroy\">\n      <span ref=\"popper\" :class=\"{show:!disabled && showPopper}\">\n        <div class=\"popover\" v-if=\"$slots.header || $slots.body\" ref=\"popover\">\n          <div class=\"popover-header\" v-if=\"$slots.header\">\n            <slot name=\"header\"></slot>\n          </div>\n          <div class=\"popover-body\" v-if=\"$slots.body\">\n            <slot name=\"body\"></slot>\n          </div>\n        </div>\n        <slot></slot>\n      </span>\n    </transition>\n    <slot name=\"reference\"></slot>\n  </span>\n</template>\n\n<script>\n  import Popper from 'popper.js';\n\n  const on = function(element, event, handler) {\n    if (element && event && handler) {\n      document.addEventListener ? element.addEventListener(event, handler, false) :\n        element.attachEvent('on' + event, handler);\n    }\n  };\n\n  const off = function(element, event, handler) {\n    if (element && event) {\n      document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\n    }\n  };\n\n  const Popover = {\n    props: {\n      trigger: {\n        type: String,\n        default: 'click',\n        validator: value => ['click', 'hover'].indexOf(value) > -1\n      },\n      delayOnMouseOut: {\n        type: Number,\n        default: 10,\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      enterActiveClass: String,\n      leaveActiveClass: String,\n      boundariesSelector: String,\n      reference: {},\n      forceShow: {\n        type: Boolean,\n        default: false\n      },\n      close: Boolean,\n      appendToBody: {\n        type: Boolean,\n        default: false\n      },\n      visibleArrow: {\n        type: Boolean,\n        default: true\n      },\n      transition: {\n        type: String,\n        default: ''\n      },\n      options: {\n        type: Object,\n        default() {\n          return {};\n        }\n      },\n    },\n\n    data() {\n      return {\n        referenceElm: null,\n        popperJS: null,\n        showPopper: false,\n        currentPlacement: '',\n        popperOptions: {\n          placement: 'bottom',\n          gpuAcceleration: false\n        }\n      };\n    },\n\n    watch: {\n      showPopper(value) {\n        if (value) {\n          this.$emit('show');\n          this.updatePopper();\n        } else {\n          this.$emit('hide');\n        }\n      },\n      close(value) {\n        if (value) this.doClose();\n      },\n      forceShow: {\n        handler(value) {\n          this[value ? 'doShow' : 'doClose']();\n        },\n        immediate: true\n      }\n    },\n\n    created() {\n      this.appendedArrow = false;\n      this.appendedToBody = false;\n      this.popperOptions = Object.assign(this.popperOptions, this.options);\n    },\n\n    mounted() {\n      this.referenceElm = this.reference || this.$slots.reference[0].elm;\n      this.popover = this.$refs.popover || this.$slots.default[0].elm;\n\n      switch (this.trigger) {\n        case 'click':\n          on(this.referenceElm, 'click', this.doToggle);\n          on(document, 'click', this.handleDocumentClick);\n          break;\n        case 'hover':\n          on(this.referenceElm, 'mouseover', this.onMouseOver);\n          on(this.popover, 'mouseover', this.onMouseOver);\n          on(this.referenceElm, 'mouseout', this.onMouseOut);\n          on(this.popover, 'mouseout', this.onMouseOut);\n          break;\n      }\n    },\n\n    methods: {\n      doToggle() {\n        if (!this.forceShow) {\n          this.showPopper = !this.showPopper;\n        }\n      },\n\n      doShow() {\n        this.showPopper = true;\n      },\n\n      doClose() {\n        this.showPopper = false;\n      },\n\n      doDestroy() {\n        if (this.showPopper) {\n          return;\n        }\n\n        if (this.popperJS) {\n          this.popperJS.destroy();\n          this.popperJS = null;\n        }\n\n        if (this.appendedToBody) {\n          this.appendedToBody = false;\n          document.body.removeChild(this.popover.parentElement);\n        }\n      },\n\n      createPopper() {\n        this.$nextTick(() => {\n          if (this.visibleArrow) {\n            this.appendArrow(this.popover);\n          }\n\n          if (this.appendToBody && !this.appendedToBody) {\n            this.appendedToBody = true;\n            document.body.appendChild(this.popover.parentElement);\n          }\n\n          if (this.popperJS && this.popperJS.destroy) {\n            this.popperJS.destroy();\n          }\n\n          if (this.boundariesSelector) {\n            const boundariesElement = document.querySelector(this.boundariesSelector);\n\n            if (boundariesElement) {\n              this.popperOptions.modifiers = Object.assign({}, this.popperOptions.modifiers);\n              this.popperOptions.modifiers.preventOverflow = Object.assign({}, this.popperOptions.modifiers.preventOverflow);\n              this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\n            }\n          }\n\n          this.popperOptions.onCreate = () => {\n            this.$emit('created', this);\n            this.$nextTick(this.updatePopper);\n          };\n\n          this.popperJS = new Popper(this.referenceElm, this.popover, this.popperOptions);\n        });\n      },\n\n      destroyPopper() {\n        off(this.referenceElm, 'click', this.doToggle);\n        off(this.referenceElm, 'mouseup', this.doClose);\n        off(this.referenceElm, 'mousedown', this.doShow);\n        off(this.referenceElm, 'focus', this.doShow);\n        off(this.referenceElm, 'blur', this.doClose);\n        off(this.referenceElm, 'mouseout', this.onMouseOut);\n        off(this.referenceElm, 'mouseover', this.onMouseOver);\n        off(document, 'click', this.handleDocumentClick);\n\n        this.showPopper = false;\n        this.doDestroy();\n      },\n\n      appendArrow(element) {\n        if (this.appendedArrow) {\n          return;\n        }\n\n        this.appendedArrow = true;\n\n        const arrow = document.createElement('div');\n        arrow.setAttribute('x-arrow', '');\n        arrow.className = 'popover_arrow';\n        element.appendChild(arrow);\n      },\n\n      updatePopper() {\n        this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\n      },\n\n      onMouseOver() {\n        this.showPopper = true;\n        clearTimeout(this._timer);\n      },\n\n      onMouseOut() {\n        this._timer = setTimeout(() => {\n          this.showPopper = false;\n        }, this.delayOnMouseOut);\n      },\n\n      handleDocumentClick(e) {\n        if (!this.$el || !this.referenceElm ||\n          this.$el.contains(e.target) ||\n          this.referenceElm.contains(e.target) ||\n          !this.popover || this.popover.contains(e.target)\n        ) {\n          return;\n        }\n\n        this.$emit('documentClick');\n\n        if (this.forceShow) {\n          return;\n        }\n\n        this.showPopper = false;\n      }\n    },\n\n    destroyed() {\n      this.destroyPopper();\n    }\n  };\n\n  export default Popover;\n  export { Popover as mdbPopover };\n</script>\n\n<style>\n  .popover {\n    width: auto;\n    background-color: white;\n    color: #97999b;\n    text-align: center;\n    display: inline-block;\n    border-radius: 3px;\n    position: absolute;\n    font-size: 0.83em;\n    font-weight: normal;\n    border: 1px rgb(0, 0, 0) solid;\n    z-index: 200000;\n    max-width: 276px;\n    text-align: start;\n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, .2);\n    border-radius: .3rem;\n    opacity: 0;\n    transition: opacity 0.3s, visibility 0.3s;\n    visibility: hidden;\n  }\n\n  .show .popover {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  .popover-body {\n    color: #6c6e71;\n  }\n\n  .popover .popover_arrow {\n    width: 0;\n    height: 0;\n    border-style: solid;\n    position: absolute;\n    margin: 5px;\n    color: transparent;\n  }\n\n  .popover[x-placement^=\"top\"] {\n    margin-bottom: 18px;\n  }\n\n  .popover[x-placement^=\"top\"] .popover_arrow {\n    border-width: 15px 15px 0 15px;\n    border-color: #d6d6d6 transparent transparent transparent;\n    bottom: -15px;\n    margin-bottom: 0;\n  }\n\n  .popover[x-placement^=\"top\"] .popover_arrow::before {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    left: -15px;\n    bottom: 1.5px;\n    border: solid;\n    border-width: 15px 15px 0 15px;\n    border-color: white transparent transparent transparent;\n  }\n\n  .popover[x-placement^=\"bottom\"] {\n    margin-top: 18px;\n  }\n\n  .popover[x-placement^=\"bottom\"] .popover_arrow {\n    border-width: 0 15px 15px 15px;\n    border-color: transparent transparent #d6d6d6 transparent;\n    top: -15px;\n    margin-top: 0;\n  }\n\n  .popover[x-placement^=\"bottom\"] .popover_arrow::before {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    left: -15px;\n    top: 1.45px;\n    border: solid;\n    border-width: 0 15px 15px 15px;\n    border-color: transparent transparent white transparent;\n  }\n\n  .popover[x-placement^=\"right\"] {\n    margin-left: 18px;\n  }\n\n  .popover[x-placement^=\"right\"] .popover_arrow {\n    border-width: 15px 15px 15px 0;\n    border-color: transparent #d6d6d6 transparent transparent;\n    left: -15px;\n    margin-left: 0;\n  }\n\n  .popover[x-placement^=\"right\"] .popover_arrow::before {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    top: -15px;\n    left: 1.45px;\n    border: solid;\n    border-width: 15px 15px 15px 0;\n    border-color: transparent white transparent transparent;\n  }\n\n  .popover[x-placement^=\"left\"] {\n    margin-right: 18px;\n  }\n\n  .popover[x-placement^=\"left\"] .popover_arrow {\n    border-width: 15px 0 15px 15px;\n    border-color: transparent transparent transparent #d6d6d6;\n    right: -15px;\n    margin-right: 0;\n  }\n\n  .popover[x-placement^=\"left\"] .popover_arrow::before {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    top: -15px;\n    right: 1.45px;\n    border: solid;\n    border-width: 15px 0 15px 15px;\n    border-color: transparent transparent transparent white;\n  }\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Advanced"}]}