{"remainingRequest":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\CloseStops.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\CloseStops.vue","mtime":1565031380933},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\.babelrc","mtime":1558350834000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport VueResource from 'vue-resource';\nimport * as VueGoogleMaps from \"vue2-google-maps\";\nVue.use(VueResource);\nVue.use(VueGoogleMaps, {\n  load: {\n    key: \"AIzaSyDtDhERr6lE5ZeIsDAg0R0n2fde4-QPCxU\",\n    libraries: \"places\" // necessary for places input\n\n  }\n});\nexport default {\n  name: 'closeStops',\n  data: function data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: {\n        lat: 40.4170158,\n        lng: -3.7040859\n      },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      infoWinOpen: false,\n      currentMidx: null,\n      infoContent: '',\n      infoOptions: {\n        pixelOffset: {\n          width: 0,\n          height: -35\n        }\n      },\n      infoWindowPos: {\n        lat: 0,\n        lng: 0,\n        name: null,\n        description: null\n      },\n      spinnerDis: true,\n      mapDis: false\n    };\n  },\n  methods: {\n    // receives a place object via the autocomplete component\n    setPlace: function setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker: function addMarker(long, latit, name, desc) {\n      var marker = {\n        lat: latit,\n        lng: long,\n        name: name,\n        description: desc\n      };\n      this.markers.push({\n        position: marker,\n        name: name,\n        description: desc\n      });\n      this.places.push(this.currentPlace);\n      this.center = marker;\n      this.currentPlace = null;\n    },\n    geolocate: function geolocate() {\n      var _this = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    },\n    toggleInfoWindow: function toggleInfoWindow(marker, idx) {\n      this.infoWindowPos = marker.position;\n      this.infoContent = this.getInfoWindowContent(marker); //check if its the same marker that was selected if yes toggle\n\n      if (this.currentMidx == idx) {\n        this.infoWinOpen = !this.infoWinOpen;\n      } //if different marker set infowindow to open and reset current marker index\n      else {\n          this.infoWinOpen = true;\n          this.currentMidx = idx;\n        }\n    },\n    getInfoWindowContent: function getInfoWindowContent(marker) {\n      return \"<div class=\\\"card\\\">\\n        <div>\\n          <figure class=\\\"image is-4by3\\\">\\n            <img src=\\\"https://i0.wp.com/cdna.c3dt.com/icon/248357-com.emtmadrid.emt.png\\\" alt=\\\"Placeholder image\\\">\\n          </figure>\\n        </div>\\n        <div class=\\\"card-content\\\">\\n          <div class=\\\"media\\\">\\n            <div class=\\\"media-content\\\">\\n              <p class=\\\"content\\\">\".concat(marker.name, \"</p>\\n            </div>\\n          </div>\\n          <div class=\\\"content\\\">\\n            \").concat(marker.description, \"\\n          </div>\\n        </div>\\n      </div>\");\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$http.get('https://openapi.emtmadrid.es/v1/mobilitylabs/user/login', {\n      responseType: 'json',\n      headers: {\n        'email': 'mrsergiogf@gmail.com',\n        'password': 'Sergio18',\n        'X-ApiKey': 'a964005d-56ab-42af-be94-fe77c4d7df77',\n        'X-ClientId': 'fb43dc15-182d-4b2c-be4d-da9ad36a24a7'\n      }\n    }).then(function (response) {\n      _this2.$http.get('https://openapi.emtmadrid.es/v1/transport/busemtmad/stops/arroundxy/-3.7040859/40.4170158/200/', {\n        responseType: 'json',\n        headers: {\n          'accessToken': response.body.data[0].accessToken\n        }\n      }).then(function (response) {\n        var data = response.body.data[0];\n\n        for (var i = 0; i < data.stops.length; i++) {\n          var lat = data.stops[i].geometry.coordinates[0];\n          var long = data.stops[i].geometry.coordinates[1];\n          var name = data.stops[i].name;\n          var description = data.stops[i].postalAddress;\n\n          _this2.markers.push({\n            'name': name,\n            'description': description\n          });\n\n          _this2.addMarker(lat, long, name, description);\n\n          _this2.spinnerDis = false;\n          _this2.mapDis = true;\n        }\n      }, function (response) {\n        alert('error2');\n      });\n    }, function (response) {\n      // error callback\n      alert('error');\n    }); // this.$router.replace('login')\n    // this.geolocate();\n  }\n};",{"version":3,"sources":["CloseStops.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <card class=\"card-map\" title=\"Close Stops\">\n      <p> These are the closest bus stops next to your location.</p>\n      <div v-show=\"spinnerDis\">\n        <b-spinner label=\"Spinning\"></b-spinner>\n      </div>\n      <div class=\"map\" v-show=\"mapDis\">\n        <gmap-map\n          :center=\"center\"\n          :zoom=\"17\"\n          style=\"width:100%;  height: 400px;\"\n        >\n          <gmap-marker\n            :key=\"index\"\n            v-for=\"(m, index) in markers\"\n            :position=\"m.position\"\n            @click=\"toggleInfoWindow(m,index)\"\n          ></gmap-marker>\n          <gmap-info-window\n            :options=\"infoOptions\"\n            :position=\"infoWindowPos\"\n            :opened=\"infoWinOpen\"\n            @closeclick=\"infoWinOpen=false\"\n          >\n          <div v-html=\"infoContent\"></div>\n          </gmap-info-window>\n        </gmap-map>\n      </div>\n    </card>\n</template>\n<script>\nimport Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport * as VueGoogleMaps from \"vue2-google-maps\";\nVue.use(VueResource)\nVue.use(VueGoogleMaps, {\n  load: {\n    key: \"AIzaSyDtDhERr6lE5ZeIsDAg0R0n2fde4-QPCxU\",\n    libraries: \"places\" // necessary for places input\n  }\n})\nexport default {\nname: 'closeStops',\n  data () {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 40.4170158, lng: -3.7040859 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      infoWinOpen: false,\n      currentMidx: null,\n      infoContent: '',\n      infoOptions: {\n        pixelOffset: {\n        width: 0,\n        height: -35\n        }\n      },\n      infoWindowPos: {\n        lat: 0,\n        lng: 0,\n        name: null,\n        description: null\n      },\n      spinnerDis: true,\n      mapDis: false\n    }\n  },\n  methods: {\n      // receives a place object via the autocomplete component\n      setPlace(place) {\n        this.currentPlace = place;\n      },\n      addMarker(long,latit,name,desc) {\n          const marker = {\n            lat: latit,\n            lng: long,\n            name: name,\n            description: desc\n          }\n          this.markers.push({ position: marker , name: name, description: desc });\n          this.places.push(this.currentPlace)\n          this.center = marker\n          this.currentPlace = null\n      },\n      geolocate: function() {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.center = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        })\n      },\n      toggleInfoWindow: function (marker, idx) {\n        this.infoWindowPos = marker.position;\n        this.infoContent = this.getInfoWindowContent(marker);\n        \n\n        //check if its the same marker that was selected if yes toggle\n        if (this.currentMidx == idx) {\n          this.infoWinOpen = !this.infoWinOpen;\n        }\n        //if different marker set infowindow to open and reset current marker index\n        else {\n          this.infoWinOpen = true;\n          this.currentMidx = idx;\n        }\n      },\n\n      getInfoWindowContent: function (marker) {\n        return (`<div class=\"card\">\n        <div>\n          <figure class=\"image is-4by3\">\n            <img src=\"https://i0.wp.com/cdna.c3dt.com/icon/248357-com.emtmadrid.emt.png\" alt=\"Placeholder image\">\n          </figure>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"media\">\n            <div class=\"media-content\">\n              <p class=\"content\">${marker.name}</p>\n            </div>\n          </div>\n          <div class=\"content\">\n            ${marker.description}\n          </div>\n        </div>\n      </div>`)\n    }\n  },\n  mounted () {\n    this.$http.get('https://openapi.emtmadrid.es/v1/mobilitylabs/user/login', {responseType: 'json', headers: {'email': 'mrsergiogf@gmail.com', 'password': 'Sergio18', 'X-ApiKey': 'a964005d-56ab-42af-be94-fe77c4d7df77', 'X-ClientId': 'fb43dc15-182d-4b2c-be4d-da9ad36a24a7'}}).then(response => {\n       this.$http.get('https://openapi.emtmadrid.es/v1/transport/busemtmad/stops/arroundxy/-3.7040859/40.4170158/200/', {responseType: 'json', headers: {'accessToken': response.body.data[0].accessToken}}).then(response => {\n        var data = response.body.data[0]\n        for(var i=0;i < data.stops.length;i++){\n          var lat = data.stops[i].geometry.coordinates[0]\n          var long = data.stops[i].geometry.coordinates[1]\n          var name = data.stops[i].name\n          var description = data.stops[i].postalAddress\n          this.markers.push({'name': name,'description': description})\n          this.addMarker(lat,long,name,description)\n          this.spinnerDis = false\n          this.mapDis = true\n        }\n      }, response => {\n        alert('error2')\n      })\n    }, response => {\n      // error callback\n      alert('error')\n    })\n    // this.$router.replace('login')\n    // this.geolocate();\n  }\n}\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/pages"}]}