{"remainingRequest":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\TableList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\TableList.vue","mtime":1564852514157},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\.babelrc","mtime":1558350834000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { PaperTable } from \"@/components\";\nimport Vue from 'vue';\nimport VueResource from 'vue-resource';\nimport firebase from 'firebase';\nimport Autocomplete from '@trevoreyre/autocomplete-vue';\nimport '@trevoreyre/autocomplete-vue/dist/style.css';\nimport GoogleSpreadsheet from 'google-spreadsheet';\nVue.use(VueResource);\nVue.use(Autocomplete);\nVue.use(GoogleSpreadsheet);\nvar tableColumns = ['Line', 'Destination', 'Estimate Arrive', 'Distance Bus'];\nvar tableData = [{\n  line: \"1\",\n  destination: \"Dakota Rice\",\n  estimate_arrive: \"$36.738\",\n  distance_bus: \"Niger\"\n}, {\n  line: 2,\n  destination: \"Minerva Hooper\",\n  estimate_arrive: \"$23,789\",\n  distance_bus: \"Cura√ßao\"\n}, {\n  line: 3,\n  destination: \"Sage Rodriguez\",\n  estimate_arrive: \"$56,142\",\n  distance_bus: \"Netherlands\"\n}, {\n  line: 4,\n  destination: \"Philip Chaney\",\n  estimate_arrive: \"$38,735\",\n  distance_bus: \"Netherlands\"\n}];\nexport default {\n  name: 'Schedule',\n  components: {\n    Autocomplete: Autocomplete,\n    PaperTable: PaperTable\n  },\n  data: function data() {\n    return {\n      isBusy: false,\n      fields: ['Line', 'Destination', 'Estimate Arrive', 'Distance Bus'],\n      items: [{\n        Line: 7,\n        Destination: 'MacDonald',\n        estimate_arrive: 40,\n        distance_bus: 2000\n      }, {\n        Line: 7,\n        Destination: 'MacDonald',\n        estimate_arrive: 40,\n        distance_bus: 2000\n      }, {\n        Line: 8,\n        Destination: 'MacDonald',\n        estimate_arrive: 40,\n        distance_bus: 2000\n      }, {\n        Line: 7,\n        Destination: 'MacDonald',\n        estimate_arrive: 40,\n        distance_bus: 2000\n      }],\n      selectMode: 'multi',\n      selected: [],\n      namesAux: [],\n      show: true,\n      isInit: false,\n      isSignIn: false,\n      info: null,\n      validated: true,\n      table1: {\n        title: \"Schedule\",\n        subTitle: \"Buses that are going to arrive.\",\n        columns: [].concat(tableColumns),\n        data: [].concat(tableData)\n      }\n    };\n  },\n  computed: {\n    isDisabled: function isDisabled() {\n      // evaluate whatever you need to determine disabled here...\n      return this.validated;\n    }\n  },\n  methods: {\n    initDB: function initDB() {\n      var vm = this;\n      var db = firebase.database();\n      db.ref('data/').on('value', function (snapshot) {\n        var objeto = snapshot.val();\n        var name;\n\n        for (var i = 0; i < objeto.length; i++) {\n          name = objeto[i].name;\n          vm.namesAux.push({\n            'name': name,\n            'idStop': i\n          });\n        }\n      });\n    },\n    getData: function getData(idStop) {\n      var _this = this;\n\n      var bodyJSON = \"{'\\n      \\'statistics\\':\\'Y\\',\\n      \\'cultureInfo\\':\\'EN\\',\\n      \\'Text_StopRequired_YN\\':\\'Y\\',\\n      \\'Text_EstimationsRequired_YN\\':\\'Y\\',\\n      \\'Text_IncidencesRequired_YN\\':\\'Y\\',\\n      \\'DateTime_Referenced_Incidencies_YYYYMMDD\\':\\'20190728\\'\\n'}\";\n      this.$http.get('https://openapi.emtmadrid.es/v1/mobilitylabs/user/login', {\n        responseType: 'json',\n        headers: {\n          'email': 'mrsergiogf@gmail.com',\n          'password': 'Sergio18',\n          'X-ApiKey': 'a964005d-56ab-42af-be94-fe77c4d7df77',\n          'X-ClientId': 'fb43dc15-182d-4b2c-be4d-da9ad36a24a7'\n        }\n      }).then(function (response) {\n        _this.$http.post('https://openapi.emtmadrid.es/v1/transport/busemtmad/stops/' + idStop + '/arrives/all/', {\n          headers: {\n            'accessToken': response.body.data[0].accessToken\n          },\n          body: {\n            \"mode\": \"raw\",\n            \"raw\": bodyJSON\n          }\n        }).then(function (response) {\n          var data = response.body.data[0];\n        }, function (response) {\n          console.log('error2');\n        });\n      }, function (response) {\n        // error callback\n        console.log('error');\n      });\n    },\n    rowSelected: function rowSelected(items) {\n      this.selected = items;\n      if (this.selected.length > 0) this.validated = false;else this.validated = true;\n    },\n    search: function search(input) {\n      if (input.length < 1) {\n        return [];\n      }\n\n      var vm = this;\n      var names = [];\n\n      for (var i = 0; i < vm.namesAux.length; i++) {\n        names.push(vm.namesAux[i].name);\n      }\n\n      return names.filter(function (name) {\n        return name.toLowerCase().startsWith(input.toLowerCase());\n      });\n    },\n    getResultValue: function getResultValue(result) {\n      return result;\n    },\n    handleSubmit: function handleSubmit(result) {\n      var vm = this;\n      var i = 0;\n      var ok = false;\n      var idStop;\n\n      while (i < vm.namesAux.length && !ok) {\n        if (vm.namesAux[i].name == result) {\n          idStop = vm.namesAux[i].idStop;\n          ok = true;\n        }\n\n        i++;\n      }\n\n      this.getData(idStop);\n    },\n    handleDownload: function handleDownload() {\n      var vm = this;\n      var rowsSelected = vm.selected;\n\n      var GoogleSpreadsheet = require('google-spreadsheet');\n\n      var doc = new GoogleSpreadsheet('1r5hLRn1jwQbJLkW8Q3D2bIR9QK2tk3vBNvSy3xx2xxY');\n\n      var async = require('async');\n\n      var sheet = null;\n      async.series([function setAuth(step) {\n        var creds = require(\"./google-generated-creds.json\");\n\n        doc.useServiceAccountAuth(creds, step);\n      }, function getInfoAndWorksheets(step) {\n        doc.getInfo(function (err, info) {\n          sheet = info.worksheets[0]; // removing a worksheet\n          //sheet.del(); //async\n\n          console.log(err);\n          step();\n        });\n      }, function managingSheets(step) {\n        sheet.resize({\n          rowCount: 50,\n          colCount: 4\n        }); //async\n\n        /*doc.addWorksheet({\n          title: 'Schedule EMT'\n        }, function(err, shet) {\n                       // change a sheet's title\n          sheet.setTitle('Schedule EMT'); //async\n                       //resize a sheet\n                       sheet.setHeaderRow(['Line', 'Destination', 'Estimate arrive', 'Distance Bus']); //async */\n\n        step(); //});\n      }, function workingWithCells(step) {\n        sheet.getRows({\n          offset: 1,\n          limit: 50 //orderby: 'col2'\n\n        }, function (err, rows) {\n          sheet.getCells({\n            'min-row': 2,\n            // starts in the second row\n            'max-row': 50,\n            'return-empty': true\n          }, function (err, cells) {\n            for (var a = 0; a < 50; a++) {\n              cells[a].value = \"\";\n            }\n\n            sheet.bulkUpdateCells(cells); // async\n\n            var i = 0;\n            var ok = false;\n\n            for (var j = 0; j < rowsSelected.length; j++) {\n              cells[i].value = rowsSelected[j].Line;\n              cells[i + 1].value = rowsSelected[j].Destination;\n              var minEstimateArrive = Math.round(rowsSelected[j].estimate_arrive / 60);\n              if (minEstimateArrive == 0) minEstimateArrive = '< 1 min';else minEstimateArrive = minEstimateArrive + ' min';\n              cells[i + 2].value = minEstimateArrive;\n              cells[i + 3].value = rowsSelected[j].distance_bus + ' m';\n              i += 4; // NumColumns\n            }\n\n            sheet.bulkUpdateCells(cells); // async\n\n            window.open(\"https://docs.google.com/spreadsheets/d/1r5hLRn1jwQbJLkW8Q3D2bIR9QK2tk3vBNvSy3xx2xxY/edit#gid=509695719\", \"_blank\");\n            console.log(err);\n          });\n          console.log(err);\n          step();\n        });\n      }], function (err) {\n        if (err) {\n          console.log('Error: ' + err);\n        }\n      });\n    },\n    handleClickSignIn: function handleClickSignIn() {\n      var _this2 = this;\n\n      this.$gAuth.signIn().then(function (user) {\n        // On success do something, refer to https://developers.google.com/api-client-library/javascript/reference/referencedocs#googleusergetid\n        console.log('user', _this2.googleusergetid);\n        _this2.isSignIn = _this2.$gAuth.isAuthorized;\n      }).catch(function (error) {\n        console.log(error); // On fail do something\n      });\n    },\n    handleClickSignOut: function handleClickSignOut() {\n      var _this3 = this;\n\n      this.$gAuth.signOut().then(function () {\n        // On success do something\n        _this3.isSignIn = _this3.$gAuth.isAuthorized;\n      }).catch(function (error) {\n        console.log(error); // On fail do something\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.initDB();\n    var that = this;\n    var checkGauthLoad = setInterval(function () {\n      that.isInit = that.$gAuth.isInit;\n      that.isSignIn = that.$gAuth.isAuthorized;\n      if (that.isInit) clearInterval(checkGauthLoad);\n    }, 1000);\n  }\n};",{"version":3,"sources":["TableList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card :title=\"table1.title\" :subTitle=\"table1.subTitle\">\n                    <b-form>\n            <div id=\"autocomplete\" class=\"autocomplete\">\n            <b-form-group\n              id=\"input-group-1\"\n              label-for=\"input-1\"\n            >\n            <autocomplete\n                :search=\"search\"\n                placeholder=\"Search the stop\"\n                aria-label=\"Search the stop\"\n                :get-result-value=\"getResultValue\"\n                @submit=\"handleSubmit\"\n            ></autocomplete>\n            </b-form-group>\n            </div>\n          </b-form>\n          <b-table\n              selectable\n              :select-mode=\"selectMode\"\n              selectedVariant=\"success\"\n              :fields=\"fields\"\n              @row-selected=\"rowSelected\"\n              responsive=\"sm\"\n              :items=\"items\"\n              :busy=\"isBusy\"\n              class=\"mt-3\"\n              striped\n              bordered\n              outlined>\n              <template slot=\"selected\" slot-scope=\"{ rowSelected }\">\n                <span v-if=\"rowSelected\">‚úî</span>\n              </template>\n                <div slot=\"table-busy\" class=\"text-center text-danger my-2\">\n                  <b-spinner class=\"align-middle\"></b-spinner>\n                  <strong>Loading...</strong>\n                </div>\n            </b-table>\n            <div class=\"text-center\">\n              <b-button squared variant=\"success\" @click=\"handleDownload()\" :disabled=isDisabled>Download</b-button>\n            </div>\n          \n        </card>\n      </div>\n    </div>\n</template>\n<script>\nimport { PaperTable } from \"@/components\";\nimport Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport firebase from 'firebase'\nimport Autocomplete from '@trevoreyre/autocomplete-vue'\nimport '@trevoreyre/autocomplete-vue/dist/style.css'\nimport GoogleSpreadsheet from 'google-spreadsheet'\nVue.use(VueResource)\nVue.use(Autocomplete)\nVue.use(GoogleSpreadsheet)\nconst tableColumns = ['Line', 'Destination', 'Estimate Arrive', 'Distance Bus'];\nconst tableData = [\n  {\n    line: \"1\",\n    destination: \"Dakota Rice\",\n    estimate_arrive: \"$36.738\",\n    distance_bus: \"Niger\",\n  },\n  {\n    line: 2,\n    destination: \"Minerva Hooper\",\n    estimate_arrive: \"$23,789\",\n    distance_bus: \"Cura√ßao\",\n  },\n  {\n    line: 3,\n    destination: \"Sage Rodriguez\",\n    estimate_arrive: \"$56,142\",\n    distance_bus: \"Netherlands\",\n  },\n  {\n    line: 4,\n    destination: \"Philip Chaney\",\n    estimate_arrive: \"$38,735\",\n    distance_bus: \"Netherlands\",\n  }\n];\nexport default {\n    name:'Schedule',\n    components: {\n      Autocomplete,\n      PaperTable\n    },\n    data(){\n        return{\n          isBusy: false,\n          fields: ['Line', 'Destination', 'Estimate Arrive', 'Distance Bus'],\n          items: [{ Line: 7, Destination: 'MacDonald', estimate_arrive: 40, distance_bus: 2000},\n          { Line: 7, Destination: 'MacDonald', estimate_arrive: 40, distance_bus: 2000},\n          { Line: 8, Destination: 'MacDonald', estimate_arrive: 40, distance_bus: 2000},\n          { Line: 7, Destination: 'MacDonald', estimate_arrive: 40, distance_bus: 2000}],\n          selectMode: 'multi',\n          selected: [],\n          namesAux: [],\n          show: true,\n          isInit: false,\n          isSignIn: false,\n          info: null,\n          validated: true,\n          table1: {\n            title: \"Schedule\",\n            subTitle: \"Buses that are going to arrive.\",\n            columns: [...tableColumns],\n            data: [...tableData]\n          }    \n        }\n    },\n    computed: {\n      isDisabled() {\n        // evaluate whatever you need to determine disabled here...\n        return this.validated;\n      }\n    },\n    methods:{\n        initDB(){\n          var vm = this\n          var db = firebase.database()\n          db.ref('data/').on('value', function (snapshot) {\n            var objeto = snapshot.val();\n            var name;\n            for (var i = 0; i < objeto.length; i++) {\n              name = objeto[i].name\n              vm.namesAux.push({'name':name, 'idStop':i})\n            }\n          })\n        },\n        getData(idStop){\n          var bodyJSON = \"{'\\n      \\'statistics\\':\\'Y\\',\\n      \\'cultureInfo\\':\\'EN\\',\\n      \\'Text_StopRequired_YN\\':\\'Y\\',\\n      \\'Text_EstimationsRequired_YN\\':\\'Y\\',\\n      \\'Text_IncidencesRequired_YN\\':\\'Y\\',\\n      \\'DateTime_Referenced_Incidencies_YYYYMMDD\\':\\'20190728\\'\\n'}\"\n            this.$http.get('https://openapi.emtmadrid.es/v1/mobilitylabs/user/login', {responseType: 'json', headers: {'email': 'mrsergiogf@gmail.com', 'password': 'Sergio18', 'X-ApiKey': 'a964005d-56ab-42af-be94-fe77c4d7df77', 'X-ClientId': 'fb43dc15-182d-4b2c-be4d-da9ad36a24a7'}}).then(response => {\n                this.$http.post('https://openapi.emtmadrid.es/v1/transport/busemtmad/stops/'+ idStop + '/arrives/all/', {headers: {'accessToken': response.body.data[0].accessToken}, body: {\"mode\": \"raw\", \"raw\": bodyJSON}})\n                .then(response => {\n                    var data = response.body.data[0]\n                }, response => {\n                    console.log('error2')\n                    })\n            }, response => {\n                // error callback\n                    console.log('error')\n                })\n        },\n        rowSelected(items){\n          this.selected = items\n          if(this.selected.length > 0) this.validated = false\n          else this.validated = true\n        },\n        search(input) { \n          if (input.length < 1) { return [] }\n          var vm = this\n          var names = []\n          for(var i = 0; i < vm.namesAux.length; i++)\n            names.push(vm.namesAux[i].name)\n          return names.filter(name => {\n            return name.toLowerCase().\n            startsWith(input.toLowerCase());\n          });\n        },\n        getResultValue(result) {\n          return result\n        },\n        handleSubmit(result) {\n          var vm = this\n          var i = 0\n          var ok = false\n          var idStop\n          while(i < vm.namesAux.length && !ok){\n            if(vm.namesAux[i].name == result){\n              idStop = vm.namesAux[i].idStop\n              ok = true\n            }\n            i++\n          }\n          this.getData(idStop)\n        },\n        handleDownload(){\n          var vm = this\n          var rowsSelected = vm.selected\n          var GoogleSpreadsheet = require('google-spreadsheet')\n          var doc = new GoogleSpreadsheet('1r5hLRn1jwQbJLkW8Q3D2bIR9QK2tk3vBNvSy3xx2xxY')\n          var async = require('async')\n          var sheet = null\n          async.series([\n              function setAuth (step) {\n                var creds = require('./google-generated-creds.json')\n                doc.useServiceAccountAuth(creds, step)\n              },\n              function getInfoAndWorksheets (step) {\n                doc.getInfo(function (err, info) {\n                  sheet = info.worksheets[0]\n                  // removing a worksheet\n                  //sheet.del(); //async\n                  console.log(err)\n                  step()\n                })\n              },\n              function managingSheets(step) {\n                sheet.resize({rowCount: 50, colCount: 4}); //async\n                /*doc.addWorksheet({\n                  title: 'Schedule EMT'\n                }, function(err, shet) {\n            \n                  // change a sheet's title\n                  sheet.setTitle('Schedule EMT'); //async\n            \n                  //resize a sheet\n            \n                  sheet.setHeaderRow(['Line', 'Destination', 'Estimate arrive', 'Distance Bus']); //async */        \n                  step();\n                //});\n              },\n              function workingWithCells (step) {\n                sheet.getRows({\n                  offset: 1,\n                  limit: 50,\n                  //orderby: 'col2'\n                }, function (err, rows) {\n                  sheet.getCells({\n                    'min-row': 2, // starts in the second row\n                    'max-row': 50,\n                    'return-empty': true\n                  }, function (err, cells) {\n                    for(var a = 0; a < 50; a++) \n                      cells[a].value = \"\"\n                    sheet.bulkUpdateCells(cells) // async\n                    var i = 0\n                    var ok = false\n                    for(var j = 0; j < rowsSelected.length; j++){\n                      cells[i].value = rowsSelected[j].Line\n                      cells[i + 1].value = rowsSelected[j].Destination\n                      var minEstimateArrive = Math.round(rowsSelected[j].estimate_arrive / 60)\n                      if(minEstimateArrive == 0) minEstimateArrive = '< 1 min'\n                      else minEstimateArrive = minEstimateArrive +  ' min'\n                      cells[i + 2].value = minEstimateArrive\n                      cells[i + 3].value = (rowsSelected[j].distance_bus + ' m')\n                      i += 4 // NumColumns\n                    }\n                    sheet.bulkUpdateCells(cells) // async\n                    window.open(\"https://docs.google.com/spreadsheets/d/1r5hLRn1jwQbJLkW8Q3D2bIR9QK2tk3vBNvSy3xx2xxY/edit#gid=509695719\", \"_blank\")\n                    console.log(err)\n                  })\n                  console.log(err)\n                  step()\n                })\n              }\n            ], function (err) {\n              if (err) {\n                console.log('Error: ' + err)\n              }\n            })\n        },\n        handleClickSignIn () {\n          this.$gAuth.signIn()\n            .then(user => {\n              // On success do something, refer to https://developers.google.com/api-client-library/javascript/reference/referencedocs#googleusergetid\n              console.log('user', this.googleusergetid)\n              this.isSignIn = this.$gAuth.isAuthorized\n            })\n            .catch(error => {\n              console.log(error)\n              // On fail do something\n            })\n        },\n        handleClickSignOut () {\n          this.$gAuth.signOut()\n            .then(() => {\n              // On success do something\n              this.isSignIn = this.$gAuth.isAuthorized\n            })\n            .catch(error => {\n              console.log(error)\n              // On fail do something\n            })\n        }\n    },\n    mounted(){\n      this.initDB()\n      let that = this\n      let checkGauthLoad = setInterval(function () {\n      that.isInit = that.$gAuth.isInit\n      that.isSignIn = that.$gAuth.isAuthorized\n      if (that.isInit) clearInterval(checkGauthLoad)\n    }, 1000)\n    }\n}\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/pages"}]}