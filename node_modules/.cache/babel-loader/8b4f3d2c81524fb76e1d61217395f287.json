{"remainingRequest":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\Crowded.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\Crowded.vue","mtime":1565112570779},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\.babelrc","mtime":1558350834000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport Vue from 'vue';\nimport VueFusionCharts from 'vue-fusioncharts';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts'; //import the theme\n\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport VueResource from 'vue-resource';\nimport firebase from 'firebase';\nimport Autocomplete from '@trevoreyre/autocomplete-vue';\nimport '@trevoreyre/autocomplete-vue/dist/style.css'; // register VueFusionCharts component\n\nVue.use(VueFusionCharts, FusionCharts, Charts, FusionTheme);\nVue.use(VueResource);\nVue.use(Autocomplete); // Your web app's Firebase configuration\n// Initialize Firebase\n\nvar db;\nvar aux = [];\nvar dataSource = {\n  \"chart\": {\n    \"caption\": \"People have checked the stop\",\n    \"subCaption\": \"In Ppl = People\",\n    \"xAxisName\": \"Stop\",\n    \"yAxisName\": \"People\",\n    \"numberSuffix\": \"p\",\n    \"yAxisMinValue\": \"0\",\n    \"theme\": \"fusion\"\n  },\n  \"annotations\": {\n    \"groups\": [{\n      \"id\": \"anchor-highlight\",\n      \"items\": [{\n        \"id\": \"high-star\",\n        \"type\": \"spline\",\n        \"x\": \"$dataset.0.set.2.x\",\n        \"y\": \"$dataset.0.set.2.y\",\n        \"radius\": \"12\",\n        \"color\": \"#6baa01\",\n        \"border\": \"2\",\n        \"borderColor\": \"#f8bd19\"\n      }]\n    }]\n  },\n  \"data\": null\n};\nexport default {\n  name: 'Graphics',\n  searchs: [],\n  selected: '',\n  dataSource: dataSource,\n  components: {\n    Autocomplete: Autocomplete\n  },\n  data: function data() {\n    return {\n      width: '100%',\n      height: '400',\n      type: 'spline',\n      dataFormat: 'json',\n      dataSource: dataSource,\n      id: '',\n      names: [],\n      nameStop: null,\n      spinnerDis: true,\n      chartDis: false,\n      auxComplete: []\n    };\n  },\n  computed: {},\n  methods: {\n    initDB: function initDB() {\n      var vm = this;\n      db = firebase.database();\n      var aux = [];\n      var namesAux = [];\n      db.ref('data/').on('value', function (snapshot) {\n        var objeto = snapshot.val();\n        var name;\n        var count;\n\n        for (var i = 0; i < objeto.length; i++) {\n          name = objeto[i].name;\n\n          if (objeto[i].count == null) {\n            count = 0;\n          } else {\n            count = objeto[i].count;\n          }\n\n          if (i < 20) {\n            //Summary, 20 firsts.\n            aux.push({\n              'label': name,\n              'value': count\n            });\n          }\n\n          vm.auxComplete.push({\n            'label': name,\n            'value': count\n          });\n          namesAux.push({\n            'name': name,\n            'idStop': i\n          });\n        }\n      });\n      setTimeout(function () {\n        var data = Object.assign({}, vm.dataSource); //clone data\n\n        data.data = aux;\n        vm.dataSource = data;\n        vm.names = namesAux;\n        vm.chartDis = true;\n        vm.spinnerDis = false; //this.dataSource.render('chart-container', undefined, callback)\n      }, 2000);\n    },\n    search: function search(input) {\n      if (input.length < 1) {\n        return [];\n      }\n\n      var vm = this;\n      var names = [];\n\n      for (var i = 0; i < vm.names.length; i++) {\n        names.push(vm.names[i].name);\n      }\n\n      return names.filter(function (name) {\n        return name.toLowerCase().startsWith(input.toLowerCase());\n      });\n    },\n    getResultValue: function getResultValue(result) {\n      return result;\n    },\n    handleSubmit: function handleSubmit(result) {\n      var numSearchs;\n      var vm = this;\n      var stops = vm.auxComplete;\n      var i = 0;\n      var ok = false;\n      var idStop;\n\n      while (i < stops.length && !ok) {\n        if (stops[i].label == result) {\n          stops[i].value += 1;\n          var countStop = [];\n          countStop.push({\n            'label': result,\n            'value': stops[i].value\n          });\n          vm.type = 'column2d';\n          vm.dataSource.data = countStop;\n          ok = true;\n          idStop = vm.names[i].idStop;\n        }\n\n        i++;\n      }\n\n      var query = db.ref('data/' + idStop);\n      query.update({\n        count: stops[i - 1].value\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.initDB();\n  }\n};",{"version":3,"sources":["Crowded.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <card>\n          <div id=\"app\">\n            <b-form>\n              <div id=\"autocomplete\" class=\"autocomplete\">\n              <b-form-group\n                id=\"input-group-1\"\n                label=\"Check how many people search your stop.\"\n                label-for=\"input-1\"\n              >\n              <autocomplete\n                  :search=\"search\"\n                  placeholder=\"Search for a stop\"\n                  aria-label=\"Search for a stop\"\n                  :get-result-value=\"getResultValue\"\n                  @submit=\"handleSubmit\"\n              ></autocomplete>\n              </b-form-group>\n              </div>\n            </b-form>\n            <div v-show=\"spinnerDis\">\n              <b-spinner label=\"Spinning\"></b-spinner>\n            </div>\n            <div v-show=\"chartDis\">\n              <fusioncharts\n                :type=\"type\"\n                :width=\"width\"\n                :height=\"height\"\n                :dataFormat=\"dataFormat\"\n                :dataSource=\"dataSource\"\n              ></fusioncharts>\n              </div>\n          </div>\n      </card>\n    </div>\n  </div>\n</template>\n\n<script src=\"https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js\"></script>\n<script>\n/* eslint-disable */\nimport Vue from 'vue';\nimport VueFusionCharts from 'vue-fusioncharts'\nimport FusionCharts from 'fusioncharts'\nimport Charts from 'fusioncharts/fusioncharts.charts'\n//import the theme\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'\nimport VueResource from 'vue-resource'\nimport firebase from 'firebase'\nimport Autocomplete from '@trevoreyre/autocomplete-vue'\nimport '@trevoreyre/autocomplete-vue/dist/style.css'\n\n// register VueFusionCharts component\nVue.use(VueFusionCharts, FusionCharts, Charts, FusionTheme)\nVue.use(VueResource)\nVue.use(Autocomplete)\n// Your web app's Firebase configuration\n\n// Initialize Firebase\nvar db\nvar aux = []\nvar dataSource = {\n    \"chart\": {\n        \"caption\": \"People have checked the stop\",\n        \"subCaption\": \"In Ppl = People\",\n        \"xAxisName\": \"Stop\",\n        \"yAxisName\": \"People\",\n        \"numberSuffix\": \"p\",\n        \"yAxisMinValue\": \"0\",\n        \"theme\": \"fusion\"\n    },\n    \"annotations\": {\n    \"groups\": [\n      {\n        \"id\": \"anchor-highlight\",\n        \"items\": [\n          {\n            \"id\": \"high-star\",\n            \"type\": \"spline\",\n            \"x\": \"$dataset.0.set.2.x\",\n            \"y\": \"$dataset.0.set.2.y\",\n            \"radius\": \"12\",\n            \"color\": \"#6baa01\",\n            \"border\": \"2\",\n            \"borderColor\": \"#f8bd19\"\n          }\n        ]\n      }\n    ]\n  },\n    \"data\": null\n}\nexport default {\n  name: 'Graphics',\n  searchs: [],\n  selected: '',\n  dataSource: dataSource,\n  components: {\n    Autocomplete\n  },\n  data(){\n    return {\n      width: '100%',\n      height: '400',\n      type: 'spline',\n      dataFormat: 'json',\n      dataSource: dataSource,\n      id: '',\n      names: [],\n      nameStop: null,\n      spinnerDis: true,\n      chartDis: false,\n      auxComplete: []\n    }\n  },\n  computed: {\n  },\n  methods: {\n    initDB(){\n    var vm = this\n    db = firebase.database()\n    var aux = []\n    var namesAux = []\n    db.ref('data/').on('value', function (snapshot) {\n            var objeto = snapshot.val();\n            var name;\n            var count;\n            for (var i = 0; i <objeto.length; i++) {\n              name = objeto[i].name\n              if(objeto[i].count == null){\n                count = 0\n              } else {\n                count = objeto[i].count\n              }\n              if(i < 20){ //Summary, 20 firsts.\n                aux.push({'label':name, 'value': count})\n              }\n              vm.auxComplete.push({'label':name, 'value': count})\n              namesAux.push({'name':name, 'idStop':i})\n            }\n    })\n    setTimeout(function(){\n      const data = Object.assign({}, vm.dataSource) //clone data\n        data.data = aux\n        vm.dataSource = data\n        vm.names = namesAux\n        vm.chartDis = true\n        vm.spinnerDis = false\n        //this.dataSource.render('chart-container', undefined, callback)\n    }, 2000);\n    },\n    search(input) {\n      if (input.length < 1) { return [] }\n      var vm = this\n      var names = []\n      for(var i = 0; i < vm.names.length; i++)\n        names.push(vm.names[i].name)\n      return names.filter(name => {\n        return name.toLowerCase().\n        startsWith(input.toLowerCase());\n      });\n    },\n    getResultValue(result) {\n      return result\n    },\n    handleSubmit(result) {\n      var numSearchs\n      var vm = this\n      var stops = vm.auxComplete\n      var i=0\n      var ok=false\n      var idStop\n      while(i < stops.length && !ok){\n        if(stops[i].label == result){\n          stops[i].value +=1\n          var countStop = []\n          countStop.push({'label':result, 'value':stops[i].value})\n          vm.type = 'column2d'\n          vm.dataSource.data = countStop\n          ok = true\n          idStop = vm.names[i].idStop\n        }\n        i++\n      }\n        var query= db.ref('data/' + idStop)\n        query.update({count: stops[i-1].value})\n    }\n  },\n  mounted(){\n    this.initDB()\n  }\n}\n</script>\n"],"sourceRoot":"src/pages"}]}