{"remainingRequest":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\mdbvue\\src\\components\\Forms\\NumericInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\mdbvue\\src\\components\\Forms\\NumericInput.vue","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport classNames from 'classnames';\nimport VueNumeric from 'vue-numeric';\nconst NumericInput = {\n  props: {\n    emptyValue: {\n      type: Number,\n      default: 0\n    },\n    min: {\n      type: Number\n    },\n    max: {\n      type: Number\n    },\n    precision: {\n      type: Number\n    },\n    placeholder: {\n      type: String\n    },\n    separator: {\n      type: String,\n      default: ','\n    },\n    minus: {\n      type: Boolean,\n      default: false\n    },\n    basic: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    VueNumeric\n  },\n  computed: {\n    className() {\n      return classNames('form-control');\n    },\n\n    wrapper() {\n      return classNames(!this.basic && 'md-form');\n    }\n\n  },\n  data: () => ({\n    number: ''\n  }),\n  watch: {\n    number() {\n      this.$emit('input', this.number);\n    }\n\n  }\n};\nexport default NumericInput;\nexport { NumericInput as mdbNumericInput };",{"version":3,"sources":["NumericInput.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,aAAA;AAEA,MAAA,YAAA,GAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KALA;AAQA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KARA;AAWA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAXA;AAcA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAdA;AAiBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAzBA,GADA;AA+BA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GA/BA;AAkCA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA,aAAA,UAAA,CACA,cADA,CAAA;AAGA,KALA;;AAMA,IAAA,OAAA,GAAA;AACA,aAAA,UAAA,CACA,CAAA,KAAA,KAAA,IAAA,SADA,CAAA;AAGA;;AAVA,GAlCA;AA8CA,EAAA,IAAA,EAAA,OAAA;AACA,IAAA,MAAA,EAAA;AADA,GAAA,CA9CA;AAiDA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,MAAA;AACA;;AAHA;AAjDA,CAAA;AAwDA,eAAA,YAAA;AACA,SAAA,YAAA,IAAA,eAAA","sourcesContent":["<template>\n  <div :class=\"wrapper\">\n  <vue-numeric :empty-value=\"emptyValue\" :min=\"min\" :max=\"max\" :minus=\"minus\" :precision=\"precision\" :placeholder=\"placeholder\" :class=\"className\" type=\"number\" v-model=\"number\"></vue-numeric>\n  </div>\n</template>\n\n<script>\nimport classNames from 'classnames';\nimport VueNumeric from 'vue-numeric';\n\nconst NumericInput = {\n  props: {\n    emptyValue: {\n      type: Number,\n      default: 0\n    },\n    min: {\n      type: Number\n    },\n    max: {\n      type: Number\n    },\n    precision: {\n      type: Number\n    },\n    placeholder: {\n      type: String\n    },\n    separator: {\n      type: String,\n      default: ','\n    },\n    minus: {\n      type: Boolean,\n      default: false\n    },\n    basic: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    VueNumeric\n  },\n  computed: {\n    className() {\n      return classNames(\n        'form-control'\n      );\n    },\n    wrapper() {\n      return classNames(\n        !this.basic && 'md-form'\n      );\n    }\n  },\n  data: () => ({\n    number: ''\n  }),\n  watch: {\n    number () {\n      this.$emit('input', this.number);\n    }\n  }\n};\n\nexport default NumericInput;\nexport { NumericInput as mdbNumericInput };\n</script>\n\n\n<style scoped>\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Forms"}]}