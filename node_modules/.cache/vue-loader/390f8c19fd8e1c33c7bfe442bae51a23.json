{"remainingRequest":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\CloseStops.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\src\\pages\\CloseStops.vue","mtime":1565031380933},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sergio\\Desktop\\vue-paper-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport * as VueGoogleMaps from \"vue2-google-maps\";\nVue.use(VueResource)\nVue.use(VueGoogleMaps, {\n  load: {\n    key: \"AIzaSyDtDhERr6lE5ZeIsDAg0R0n2fde4-QPCxU\",\n    libraries: \"places\" // necessary for places input\n  }\n})\nexport default {\nname: 'closeStops',\n  data () {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 40.4170158, lng: -3.7040859 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      infoWinOpen: false,\n      currentMidx: null,\n      infoContent: '',\n      infoOptions: {\n        pixelOffset: {\n        width: 0,\n        height: -35\n        }\n      },\n      infoWindowPos: {\n        lat: 0,\n        lng: 0,\n        name: null,\n        description: null\n      },\n      spinnerDis: true,\n      mapDis: false\n    }\n  },\n  methods: {\n      // receives a place object via the autocomplete component\n      setPlace(place) {\n        this.currentPlace = place;\n      },\n      addMarker(long,latit,name,desc) {\n          const marker = {\n            lat: latit,\n            lng: long,\n            name: name,\n            description: desc\n          }\n          this.markers.push({ position: marker , name: name, description: desc });\n          this.places.push(this.currentPlace)\n          this.center = marker\n          this.currentPlace = null\n      },\n      geolocate: function() {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.center = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        })\n      },\n      toggleInfoWindow: function (marker, idx) {\n        this.infoWindowPos = marker.position;\n        this.infoContent = this.getInfoWindowContent(marker);\n        \n\n        //check if its the same marker that was selected if yes toggle\n        if (this.currentMidx == idx) {\n          this.infoWinOpen = !this.infoWinOpen;\n        }\n        //if different marker set infowindow to open and reset current marker index\n        else {\n          this.infoWinOpen = true;\n          this.currentMidx = idx;\n        }\n      },\n\n      getInfoWindowContent: function (marker) {\n        return (`<div class=\"card\">\n        <div>\n          <figure class=\"image is-4by3\">\n            <img src=\"https://i0.wp.com/cdna.c3dt.com/icon/248357-com.emtmadrid.emt.png\" alt=\"Placeholder image\">\n          </figure>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"media\">\n            <div class=\"media-content\">\n              <p class=\"content\">${marker.name}</p>\n            </div>\n          </div>\n          <div class=\"content\">\n            ${marker.description}\n          </div>\n        </div>\n      </div>`)\n    }\n  },\n  mounted () {\n    this.$http.get('https://openapi.emtmadrid.es/v1/mobilitylabs/user/login', {responseType: 'json', headers: {'email': 'mrsergiogf@gmail.com', 'password': 'Sergio18', 'X-ApiKey': 'a964005d-56ab-42af-be94-fe77c4d7df77', 'X-ClientId': 'fb43dc15-182d-4b2c-be4d-da9ad36a24a7'}}).then(response => {\n       this.$http.get('https://openapi.emtmadrid.es/v1/transport/busemtmad/stops/arroundxy/-3.7040859/40.4170158/200/', {responseType: 'json', headers: {'accessToken': response.body.data[0].accessToken}}).then(response => {\n        var data = response.body.data[0]\n        for(var i=0;i < data.stops.length;i++){\n          var lat = data.stops[i].geometry.coordinates[0]\n          var long = data.stops[i].geometry.coordinates[1]\n          var name = data.stops[i].name\n          var description = data.stops[i].postalAddress\n          this.markers.push({'name': name,'description': description})\n          this.addMarker(lat,long,name,description)\n          this.spinnerDis = false\n          this.mapDis = true\n        }\n      }, response => {\n        alert('error2')\n      })\n    }, response => {\n      // error callback\n      alert('error')\n    })\n    // this.$router.replace('login')\n    // this.geolocate();\n  }\n}\n",{"version":3,"sources":["CloseStops.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CloseStops.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <card class=\"card-map\" title=\"Close Stops\">\n      <p> These are the closest bus stops next to your location.</p>\n      <div v-show=\"spinnerDis\">\n        <b-spinner label=\"Spinning\"></b-spinner>\n      </div>\n      <div class=\"map\" v-show=\"mapDis\">\n        <gmap-map\n          :center=\"center\"\n          :zoom=\"17\"\n          style=\"width:100%;  height: 400px;\"\n        >\n          <gmap-marker\n            :key=\"index\"\n            v-for=\"(m, index) in markers\"\n            :position=\"m.position\"\n            @click=\"toggleInfoWindow(m,index)\"\n          ></gmap-marker>\n          <gmap-info-window\n            :options=\"infoOptions\"\n            :position=\"infoWindowPos\"\n            :opened=\"infoWinOpen\"\n            @closeclick=\"infoWinOpen=false\"\n          >\n          <div v-html=\"infoContent\"></div>\n          </gmap-info-window>\n        </gmap-map>\n      </div>\n    </card>\n</template>\n<script>\nimport Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport * as VueGoogleMaps from \"vue2-google-maps\";\nVue.use(VueResource)\nVue.use(VueGoogleMaps, {\n  load: {\n    key: \"AIzaSyDtDhERr6lE5ZeIsDAg0R0n2fde4-QPCxU\",\n    libraries: \"places\" // necessary for places input\n  }\n})\nexport default {\nname: 'closeStops',\n  data () {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 40.4170158, lng: -3.7040859 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      infoWinOpen: false,\n      currentMidx: null,\n      infoContent: '',\n      infoOptions: {\n        pixelOffset: {\n        width: 0,\n        height: -35\n        }\n      },\n      infoWindowPos: {\n        lat: 0,\n        lng: 0,\n        name: null,\n        description: null\n      },\n      spinnerDis: true,\n      mapDis: false\n    }\n  },\n  methods: {\n      // receives a place object via the autocomplete component\n      setPlace(place) {\n        this.currentPlace = place;\n      },\n      addMarker(long,latit,name,desc) {\n          const marker = {\n            lat: latit,\n            lng: long,\n            name: name,\n            description: desc\n          }\n          this.markers.push({ position: marker , name: name, description: desc });\n          this.places.push(this.currentPlace)\n          this.center = marker\n          this.currentPlace = null\n      },\n      geolocate: function() {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.center = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        })\n      },\n      toggleInfoWindow: function (marker, idx) {\n        this.infoWindowPos = marker.position;\n        this.infoContent = this.getInfoWindowContent(marker);\n        \n\n        //check if its the same marker that was selected if yes toggle\n        if (this.currentMidx == idx) {\n          this.infoWinOpen = !this.infoWinOpen;\n        }\n        //if different marker set infowindow to open and reset current marker index\n        else {\n          this.infoWinOpen = true;\n          this.currentMidx = idx;\n        }\n      },\n\n      getInfoWindowContent: function (marker) {\n        return (`<div class=\"card\">\n        <div>\n          <figure class=\"image is-4by3\">\n            <img src=\"https://i0.wp.com/cdna.c3dt.com/icon/248357-com.emtmadrid.emt.png\" alt=\"Placeholder image\">\n          </figure>\n        </div>\n        <div class=\"card-content\">\n          <div class=\"media\">\n            <div class=\"media-content\">\n              <p class=\"content\">${marker.name}</p>\n            </div>\n          </div>\n          <div class=\"content\">\n            ${marker.description}\n          </div>\n        </div>\n      </div>`)\n    }\n  },\n  mounted () {\n    this.$http.get('https://openapi.emtmadrid.es/v1/mobilitylabs/user/login', {responseType: 'json', headers: {'email': 'mrsergiogf@gmail.com', 'password': 'Sergio18', 'X-ApiKey': 'a964005d-56ab-42af-be94-fe77c4d7df77', 'X-ClientId': 'fb43dc15-182d-4b2c-be4d-da9ad36a24a7'}}).then(response => {\n       this.$http.get('https://openapi.emtmadrid.es/v1/transport/busemtmad/stops/arroundxy/-3.7040859/40.4170158/200/', {responseType: 'json', headers: {'accessToken': response.body.data[0].accessToken}}).then(response => {\n        var data = response.body.data[0]\n        for(var i=0;i < data.stops.length;i++){\n          var lat = data.stops[i].geometry.coordinates[0]\n          var long = data.stops[i].geometry.coordinates[1]\n          var name = data.stops[i].name\n          var description = data.stops[i].postalAddress\n          this.markers.push({'name': name,'description': description})\n          this.addMarker(lat,long,name,description)\n          this.spinnerDis = false\n          this.mapDis = true\n        }\n      }, response => {\n        alert('error2')\n      })\n    }, response => {\n      // error callback\n      alert('error')\n    })\n    // this.$router.replace('login')\n    // this.geolocate();\n  }\n}\n</script>\n<style>\n</style>\n"]}]}